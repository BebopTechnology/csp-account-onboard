AWSTemplateFormatVersion: 2010-09-09
Description: Bebop One-Click Onboarding
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Required
      Parameters:
        - ExternalId
        - IAMRoleName
        - Permissions
Parameters:
  IAMRoleName:
    Description: Customize the name of IAM role for Bebop to assume
    Type: String
    Default: Bebop-Admin-Role2
  ExternalId:
    Description: A unique string for added security when using assume role. (Should be shared with Bebop)
    Type: String
  Permissions:
    Description: >-
      Customize the Bebop Role permissions.
      Select "Full" for Bebop to manage all resource including IAM or "Minimal" to self-manage IAM and grant Bebop the minimal required permissions.
    Type: String
    Default: Full
    AllowedValues:
      - Full
      - Minimal
  BebopAWSAccountId:
    Description: >-
      Bebop AWS account ID allowed to assume the integration IAM role. DO NOT CHANGE!
    Type: String
    Default: "067319167081"
Conditions:
  FullPermissions:
    Fn::Equals:
      - Ref: Permissions
      - Full
  MinimalPermissions:
    Fn::Equals:
      - Ref: Permissions
      - Minimal
Resources:
  BebopAdminRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub
                - 'arn:aws:iam::${BebopAWSAccountId}:root'
                - BebopAWSAccountId: !Ref BebopAWSAccountId
            Action:
              - 'sts:AssumeRole'
      Path: /
      RoleName: !Ref IAMRoleName
      Policies:
        - PolicyName: BebopAWSAdminPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
            - !If
              - FullPermissions
              -
                Effect: Allow
                Resource: '*'
                Action: '*'
              -
                Effect: Allow
                Resource: '*'
                Action:
                  - 'tag:*'
                  - 'support:*'
                  - 'ec2:*'
                  - 'sns:*'
                  - 'kms:*'
                  - 'logs:*'
                  - 'cloudwatch:*'
                  - 'events:*'
                  - 'route53:*'
                  - 'aws-marketplace:*'
                  - 'iam:PassRole'
                  - 'aws-portal:ViewAccount'
                  - 'aws-portal:ViewBilling'
                  - 'aws-portal:ViewUsage'
  BebopServiceRole:
    Type: 'AWS::IAM::Role'
    Condition: MinimalPermissions
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub
                - 'arn:aws:iam::${BebopAWSAccountId}:root'
                - BebopAWSAccountId: !Ref BebopAWSAccountId
            Action:
              - 'sts:AssumeRole'
            Condition:
              StringEquals:
                'sts:ExternalId': !Ref ExternalId
      Path: /
      RoleName: BebopServiceRole2
      Policies:
        - PolicyName: BebopServiceRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 'ec2:*'
                Resource: '*'
              - Effect: Allow
                Action: 'iam:PassRole'
                Resource: '*'
              - Effect: Allow
                Action:
                - 'kms:RetireGrant'
                - 'kms:CreateGrant'
                - 'kms:ReEncrypt*'
                - 'kms:GenerateDataKey*'
                - 'kms:Encrypt'
                - 'kms:DescribeKey'
                - 'kms:Decrypt'
                Resource: '*'
              - Effect: Allow
                Action:
                - 'iam:*AccessKey*'
                - 'iam:ChangePassword'
                - 'iam:GetUser'
                - 'iam:*ServiceSpecificCredential*'
                - 'iam:*SigningCertificate*'
                Resource:
                - 'arn:aws:iam::*:user/bbpflexsrvcuser'
  BebopInstanceRole:
    Type: 'AWS::IAM::Role'
    Condition: MinimalPermissions
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: 'ec2.amazonaws.com'
          Action: 'sts:AssumeRole'
      Path: /
      RoleName: BebopInstanceRole2
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore'
  BebopNotificationTopic:
    Type: AWS::SNS::Topic
    Condition: MinimalPermissions
    Properties:
      DisplayName: BebopEC2Notification
      Subscription:
        - Endpoint: 'https://mcp.beboptechnology.com/api/v1/aws/ec2Status'
          Protocol: 'HTTPS'
      TopicName: BebopEC2Notification
  BebopNotificationEventRule:
    Condition: MinimalPermissions
    Type: AWS::Events::Rule
    Properties: 
      Name: BebopEC2Notification
      Description: "EventRule"
      EventPattern: 
        detail-type: 
          - "EC2 Instance State-change Notification"
        source:
          - "aws.ec2"
      State: "ENABLED"
      Targets: 
        - Arn: !Ref BebopNotificationTopic
          Id: "BebopEC2Notification"
  BebopNotificationTopicPolicy:
    Condition: MinimalPermissions
    Type: 'AWS::SNS::TopicPolicy'
    Properties:
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: 'sns:Publish'
            Resource: !Ref BebopNotificationTopic
      Topics:
        - !Ref BebopNotificationTopic
Outputs:
    BebopAdminRole:
      Description: Bebop Admin Role ARN
      Value: !GetAtt BebopAdminRole.Arn
    BebopServiceRole:
      Condition: MinimalPermissions
      Description: Bebop Service Role ARN
      Value: !GetAtt BebopServiceRole.Arn
  



